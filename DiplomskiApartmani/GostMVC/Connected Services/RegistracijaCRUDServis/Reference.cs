//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GostMVC.RegistracijaCRUDServis {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RegistracijaCRUDServis.IRegistracijaCRUDService")]
    public interface IRegistracijaCRUDService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistracijaCRUDService/novaRegistracija", ReplyAction="http://tempuri.org/IRegistracijaCRUDService/novaRegistracijaResponse")]
        bool novaRegistracija(ApartmaniService.DTO.GostDTO noviGost);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistracijaCRUDService/novaRegistracija", ReplyAction="http://tempuri.org/IRegistracijaCRUDService/novaRegistracijaResponse")]
        System.Threading.Tasks.Task<bool> novaRegistracijaAsync(ApartmaniService.DTO.GostDTO noviGost);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistracijaCRUDService/uredivanjePodataka", ReplyAction="http://tempuri.org/IRegistracijaCRUDService/uredivanjePodatakaResponse")]
        bool uredivanjePodataka(ApartmaniService.DTO.GostDTO gostZaUredivanje);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistracijaCRUDService/uredivanjePodataka", ReplyAction="http://tempuri.org/IRegistracijaCRUDService/uredivanjePodatakaResponse")]
        System.Threading.Tasks.Task<bool> uredivanjePodatakaAsync(ApartmaniService.DTO.GostDTO gostZaUredivanje);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistracijaCRUDService/prijava", ReplyAction="http://tempuri.org/IRegistracijaCRUDService/prijavaResponse")]
        ApartmaniService.DTO.GostDTO prijava(string email, string sifra);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistracijaCRUDService/prijava", ReplyAction="http://tempuri.org/IRegistracijaCRUDService/prijavaResponse")]
        System.Threading.Tasks.Task<ApartmaniService.DTO.GostDTO> prijavaAsync(string email, string sifra);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistracijaCRUDService/gostID", ReplyAction="http://tempuri.org/IRegistracijaCRUDService/gostIDResponse")]
        ApartmaniService.DTO.GostDTO gostID([System.ServiceModel.MessageParameterAttribute(Name="GostID")] string GostID1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistracijaCRUDService/gostID", ReplyAction="http://tempuri.org/IRegistracijaCRUDService/gostIDResponse")]
        System.Threading.Tasks.Task<ApartmaniService.DTO.GostDTO> gostIDAsync(string GostID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRegistracijaCRUDServiceChannel : GostMVC.RegistracijaCRUDServis.IRegistracijaCRUDService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegistracijaCRUDServiceClient : System.ServiceModel.ClientBase<GostMVC.RegistracijaCRUDServis.IRegistracijaCRUDService>, GostMVC.RegistracijaCRUDServis.IRegistracijaCRUDService {
        
        public RegistracijaCRUDServiceClient() {
        }
        
        public RegistracijaCRUDServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RegistracijaCRUDServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RegistracijaCRUDServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RegistracijaCRUDServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool novaRegistracija(ApartmaniService.DTO.GostDTO noviGost) {
            return base.Channel.novaRegistracija(noviGost);
        }
        
        public System.Threading.Tasks.Task<bool> novaRegistracijaAsync(ApartmaniService.DTO.GostDTO noviGost) {
            return base.Channel.novaRegistracijaAsync(noviGost);
        }
        
        public bool uredivanjePodataka(ApartmaniService.DTO.GostDTO gostZaUredivanje) {
            return base.Channel.uredivanjePodataka(gostZaUredivanje);
        }
        
        public System.Threading.Tasks.Task<bool> uredivanjePodatakaAsync(ApartmaniService.DTO.GostDTO gostZaUredivanje) {
            return base.Channel.uredivanjePodatakaAsync(gostZaUredivanje);
        }
        
        public ApartmaniService.DTO.GostDTO prijava(string email, string sifra) {
            return base.Channel.prijava(email, sifra);
        }
        
        public System.Threading.Tasks.Task<ApartmaniService.DTO.GostDTO> prijavaAsync(string email, string sifra) {
            return base.Channel.prijavaAsync(email, sifra);
        }
        
        public ApartmaniService.DTO.GostDTO gostID(string GostID1) {
            return base.Channel.gostID(GostID1);
        }
        
        public System.Threading.Tasks.Task<ApartmaniService.DTO.GostDTO> gostIDAsync(string GostID) {
            return base.Channel.gostIDAsync(GostID);
        }
    }
}
